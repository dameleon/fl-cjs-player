Ext.data.JsonP.FlCjsPlayer({"tagname":"class","name":"FlCjsPlayer","autodetected":{},"files":[{"filename":"fl-cjs-player.js","href":"fl-cjs-player.html#FlCjsPlayer"}],"params":[{"tagname":"params","type":"String|Object","name":"canvas","doc":"<p>描画を行う canvas のクエリセレクタもしくは HTMLCanvasElement</p>\n","html_type":"String|Object"},{"tagname":"params","type":"String","name":"rootMcName","doc":"<p>パブリッシュされた CreateJS ファイル内のルートシンボルの名前</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"option","optional":true,"doc":"<p>オプション設定のためのオブジェクト</p>\n","properties":[{"tagname":"params","type":"Boolean","name":"fullscreen","default":"false","optional":true,"doc":"<p>フルスクリーンモード切替のフラグ</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Boolean","name":"hd","default":"null","optional":true,"doc":"<p>高画質モード切替のフラグ。true: 高画質, false: 低画質 のように再生画質を固定する。null の場合は自動判定を行う</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Number","name":"dpr","default":"2","optional":true,"doc":"<p>設定する Device Pixel Ratio 。例えば dpr: 2 の場合で表示サイズが 320 x 416 とすると、CreateJS コンテンツの制作サイズは 640 x 832 となる</p>\n","html_type":"Number"},{"tagname":"params","type":"Boolean","name":"autostart","default":"false","optional":true,"doc":"<p>オートスタートのフラグ。true の場合、コンストラクタを初期化した時点で読み込みが開始し、再生がスタートする</p>\n","html_type":"Boolean"},{"tagname":"params","type":"Object","name":"properties","default":"null","optional":true,"doc":"<p>パブリッシュされた CreateJS ファイルの lib.properties を上書きするための値を指定する</p>\n","html_type":"Object"},{"tagname":"params","type":"String","name":"assetEndpoint","optional":true,"doc":"<p>アセットを読み込む URL のエンドポイントを指定。createjs.LoadQueue の第2引数に渡されます</p>\n","html_type":"String"},{"tagname":"params","type":"Number","name":"maxConnections","default":"5","optional":true,"doc":"<p>アセットを読み込む際の同時リクエスト数を指定</p>\n","html_type":"Number"},{"tagname":"params","type":"String","name":"apiKeyName","default":"'api'","optional":true,"doc":"<p>getApi メソッドで検索する API のキー名、例えば 'api' であれば、getApi() は stage.api という場所を検査して、結果を返す</p>\n","html_type":"String"},{"tagname":"params","type":"Function","name":"onload","default":"null","optional":true,"doc":"<p>読み込み完了時のコールバック関数を指定</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"namespaces","default":"{ lib: 'lib', images: 'images', createjs: 'createjs' }","optional":true,"doc":"<p>FlashCC で指定した各ネームスペースの値を設定する</p>\n","html_type":"Object"}],"html_type":"Object"}],"members":[{"name":"STATES","tagname":"property","owner":"FlCjsPlayer","id":"static-property-STATES","meta":{"static":true}},{"name":"env","tagname":"property","owner":"FlCjsPlayer","id":"static-property-env","meta":{"static":true}},{"name":"extend","tagname":"property","owner":"FlCjsPlayer","id":"static-property-extend","meta":{"static":true}},{"name":"__getCanvas","tagname":"method","owner":"FlCjsPlayer","id":"method-__getCanvas","meta":{"private":true}},{"name":"__getEnvData","tagname":"method","owner":"FlCjsPlayer","id":"method-__getEnvData","meta":{"private":true}},{"name":"__getNamespaces","tagname":"method","owner":"FlCjsPlayer","id":"method-__getNamespaces","meta":{"private":true}},{"name":"__getProperties","tagname":"method","owner":"FlCjsPlayer","id":"method-__getProperties","meta":{"private":true}},{"name":"__getSetting","tagname":"method","owner":"FlCjsPlayer","id":"method-__getSetting","meta":{"private":true}},{"name":"addManifestData","tagname":"method","owner":"FlCjsPlayer","id":"method-addManifestData","meta":{}},{"name":"destroy","tagname":"method","owner":"FlCjsPlayer","id":"method-destroy","meta":{}},{"name":"getApi","tagname":"method","owner":"FlCjsPlayer","id":"method-getApi","meta":{}},{"name":"getMovieClip","tagname":"method","owner":"FlCjsPlayer","id":"method-getMovieClip","meta":{}},{"name":"initViewer","tagname":"method","owner":"FlCjsPlayer","id":"method-initViewer","meta":{"private":true}},{"name":"load","tagname":"method","owner":"FlCjsPlayer","id":"method-load","meta":{}},{"name":"loadManifests","tagname":"method","owner":"FlCjsPlayer","id":"method-loadManifests","meta":{"private":true}},{"name":"pause","tagname":"method","owner":"FlCjsPlayer","id":"method-pause","meta":{}},{"name":"play","tagname":"method","owner":"FlCjsPlayer","id":"method-play","meta":{}},{"name":"resume","tagname":"method","owner":"FlCjsPlayer","id":"method-resume","meta":{}},{"name":"setManifestData","tagname":"method","owner":"FlCjsPlayer","id":"method-setManifestData","meta":{}},{"name":"stop","tagname":"method","owner":"FlCjsPlayer","id":"method-stop","meta":{}},{"name":"extend","tagname":"method","owner":"FlCjsPlayer","id":"static-method-extend","meta":{"static":true}}],"alternateClassNames":[],"aliases":{},"id":"class-FlCjsPlayer","short_doc":"Flash CC からパブリッシュした CreateJS ファイルの再生支援を行います ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/fl-cjs-player.html#FlCjsPlayer' target='_blank'>fl-cjs-player.js</a></div></pre><div class='doc-contents'><p>Flash CC からパブリッシュした CreateJS ファイルの再生支援を行います</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>canvas</span> : String|Object<div class='sub-desc'><p>描画を行う canvas のクエリセレクタもしくは HTMLCanvasElement</p>\n</div></li><li><span class='pre'>rootMcName</span> : String<div class='sub-desc'><p>パブリッシュされた CreateJS ファイル内のルートシンボルの名前</p>\n</div></li><li><span class='pre'>option</span> : Object (optional)<div class='sub-desc'><p>オプション設定のためのオブジェクト</p>\n<ul><li><span class='pre'>fullscreen</span> : Boolean (optional)<div class='sub-desc'><p>フルスクリーンモード切替のフラグ</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>hd</span> : Boolean (optional)<div class='sub-desc'><p>高画質モード切替のフラグ。true: 高画質, false: 低画質 のように再生画質を固定する。null の場合は自動判定を行う</p>\n<p>Defaults to: <code>null</code></p></div></li><li><span class='pre'>dpr</span> : Number (optional)<div class='sub-desc'><p>設定する Device Pixel Ratio 。例えば dpr: 2 の場合で表示サイズが 320 x 416 とすると、CreateJS コンテンツの制作サイズは 640 x 832 となる</p>\n<p>Defaults to: <code>2</code></p></div></li><li><span class='pre'>autostart</span> : Boolean (optional)<div class='sub-desc'><p>オートスタートのフラグ。true の場合、コンストラクタを初期化した時点で読み込みが開始し、再生がスタートする</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>properties</span> : Object (optional)<div class='sub-desc'><p>パブリッシュされた CreateJS ファイルの lib.properties を上書きするための値を指定する</p>\n<p>Defaults to: <code>null</code></p></div></li><li><span class='pre'>assetEndpoint</span> : String (optional)<div class='sub-desc'><p>アセットを読み込む URL のエンドポイントを指定。createjs.LoadQueue の第2引数に渡されます</p>\n</div></li><li><span class='pre'>maxConnections</span> : Number (optional)<div class='sub-desc'><p>アセットを読み込む際の同時リクエスト数を指定</p>\n<p>Defaults to: <code>5</code></p></div></li><li><span class='pre'>apiKeyName</span> : String (optional)<div class='sub-desc'><p>getApi メソッドで検索する API のキー名、例えば 'api' であれば、getApi() は stage.api という場所を検査して、結果を返す</p>\n<p>Defaults to: <code>&#39;api&#39;</code></p></div></li><li><span class='pre'>onload</span> : Function (optional)<div class='sub-desc'><p>読み込み完了時のコールバック関数を指定</p>\n<p>Defaults to: <code>null</code></p></div></li><li><span class='pre'>namespaces</span> : Object (optional)<div class='sub-desc'><p>FlashCC で指定した各ネームスペースの値を設定する</p>\n<p>Defaults to: <code>{ lib: &#39;lib&#39;, images: &#39;images&#39;, createjs: &#39;createjs&#39; }</code></p></div></li></ul></div></li></ul></div><div class='members'><div class='members-section'><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static properties</h3><div id='static-property-STATES' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-static-property-STATES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-static-property-STATES' class='name expandable'>STATES</a> : Object<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'><p>FlCjsPlayer 内部で用いる state を入れたオブジェクト</p>\n</div><div class='long'><p>FlCjsPlayer 内部で用いる state を入れたオブジェクト</p>\n</div></div></div><div id='static-property-env' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-static-property-env' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-static-property-env' class='name expandable'>env</a> : Object<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'><p>UserAgent から判定した環境設定情報</p>\n</div><div class='long'><p>UserAgent から判定した環境設定情報</p>\n</div></div></div><div id='static-property-extend' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-static-property-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-static-property-extend' class='name expandable'>extend</a> : Function<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>シンプルな Object.extend ...</div><div class='long'><p>シンプルな Object.extend</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : Object<div class='sub-desc'><p>object</p>\n</div></li><li><span class='pre'>domor</span> : Object<div class='sub-desc'><p>object</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>extened object</p>\n</div></li></ul></div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-__getCanvas' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-__getCanvas' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-__getCanvas' class='name expandable'>__getCanvas</a>( <span class='pre'>canvas</span> ) : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>クエリセレクタから DOM を検索して HTMLCanvasElement を返す ...</div><div class='long'><p>クエリセレクタから DOM を検索して HTMLCanvasElement を返す</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>canvas</span> : String|Object<div class='sub-desc'><p>canvas を検索するクエリセレクタ、もしくは HTMLCanvasElement</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>HTMLCanvasElement</p>\n</div></li></ul></div></div></div><div id='method-__getEnvData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-__getEnvData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-__getEnvData' class='name expandable'>__getEnvData</a>( <span class='pre'>ua</span> ) : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>UserAgent から、簡易的な環境データを生成する ...</div><div class='long'><p>UserAgent から、簡易的な環境データを生成する</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ua</span> : Object<div class='sub-desc'><p>ユーザーエージェント文字列</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>判定結果のオブジェクト\n     {\n         isAndroid        : {Boolean}, // Android かどうか\n         isios            : {Boolean}, // iOS かどうか\n         isChrome         : {Boolean}, // Chrome かどうか\n         isAndroidBrowser : {Boolean}, // Android 標準ブラウザかどうか\n         isMobileSafari   : {Boolean}, // Mobile Safari かどうか\n         isHighSpec       : {Boolean}, // ハイスペック機種 (Android4.2 以上、もしくは iOS 端末で画面サイズが 416 (iPhone4相当)以上)\n         versionString    : {String},  // ドット区切りのバージョン番号 ex. '4.2.2' '7.0'\n         version          : {Number[]} // バージョン番号が一桁ずつ入った配列 ex. [4, 2, 2] [7, 0]\n     }</p>\n</div></li></ul></div></div></div><div id='method-__getNamespaces' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-__getNamespaces' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-__getNamespaces' class='name expandable'>__getNamespaces</a>( <span class='pre'>ns</span> ) : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>設定された namespaces の情報を元に、グローバルオブジェクトからネームスペースの実体を取得して返す ...</div><div class='long'><p>設定された namespaces の情報を元に、グローバルオブジェクトからネームスペースの実体を取得して返す</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ns</span> : Object<div class='sub-desc'><p>設定された namespaces オブジェクト</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>取得した namespaces の各実体を入れたオブジェクト\n     {\n         lib      : {Object},\n         images   : {Object},\n         createjs : {Object}\n     }</p>\n</div></li></ul></div></div></div><div id='method-__getProperties' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-__getProperties' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-__getProperties' class='name expandable'>__getProperties</a>( <span class='pre'>properties, option</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>FlashCC からはき出した CreateJS ファイルの lib.properties の内容を option.properties で上書きして、新しいオブジェクトを返す ...</div><div class='long'><p>FlashCC からはき出した CreateJS ファイルの lib.properties の内容を option.properties で上書きして、新しいオブジェクトを返す</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>properties</span> : Object<div class='sub-desc'><p>出力された、生の lib.properties</p>\n</div></li><li><span class='pre'>option</span> : Object<div class='sub-desc'><p>option で設定された properties</p>\n</div></li></ul></div></div></div><div id='method-__getSetting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-__getSetting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-__getSetting' class='name expandable'>__getSetting</a>( <span class='pre'>defaults, option</span> ) : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>デフォルトの設定を option の設定で上書きして、新しいオブジェクトを返す ...</div><div class='long'><p>デフォルトの設定を option の設定で上書きして、新しいオブジェクトを返す</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>defaults</span> : Object<div class='sub-desc'><p>デフォルトの設定オブジェクト</p>\n</div></li><li><span class='pre'>option</span> : Object<div class='sub-desc'><p>オプションで指定されたオブジェクト</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>マージ済みの設定オブジェクト</p>\n</div></li></ul></div></div></div><div id='method-addManifestData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-addManifestData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-addManifestData' class='name expandable'>addManifestData</a>( <span class='pre'>manifest</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>現在の properties.manifest に新しい manifest データを追加する ...</div><div class='long'><p>現在の properties.manifest に新しい manifest データを追加する</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>manifest</span> : Object<div class='sub-desc'><p>マニフェストデータ、引数を追加することで複数指定可能</p>\n<ul><li><span class='pre'>id</span> : String|Number<div class='sub-desc'><p>manifest のデータを設定する対象の id</p>\n</div></li><li><span class='pre'>src</span> : String|Number<div class='sub-desc'><p>設定するアセットデータへの URL、もしくは base64 String</p>\n</div></li><li><span class='pre'>type</span> : String (optional)<div class='sub-desc'><p>設定する manifest データのタイプを指定。 src に base64 String を指定した場合は必須\n     指定するのは createjs.LoadQueue 以下の各タイプ</p>\n</div></li></ul></div></li></ul></div></div></div><div id='method-destroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>インスタンスが持つプロパティやデータを全て破棄する\n実行後は、本インスタンスは利用不可能になるので注意 ...</div><div class='long'><p>インスタンスが持つプロパティやデータを全て破棄する\n実行後は、本インスタンスは利用不可能になるので注意</p>\n</div></div></div><div id='method-getApi' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-getApi' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-getApi' class='name expandable'>getApi</a>( <span class='pre'>[name], [path]</span> ) : Object|null<span class=\"signature\"></span></div><div class='description'><div class='short'>API を取得する\n引数のパスから取得した MC 、もしくはステージオブジェクトから、引数 name もしくは setting.apiKeyName をキーにして、API オブジェクトを取得する ...</div><div class='long'><p>API を取得する\n引数のパスから取得した MC 、もしくはステージオブジェクトから、引数 name もしくは setting.apiKeyName をキーにして、API オブジェクトを取得する</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String (optional)<div class='sub-desc'><p>取得する API が設定されているオブジェクトのキー名\n     指定無しの場合は setting.apiKeyName を参照する</p>\n<p>Defaults to: <code>setting.apiKeyName</code></p></div></li><li><span class='pre'>path</span> : String (optional)<div class='sub-desc'><p>API を取得するターゲットとなるムービークリップへのパスをスラッシュ区切りで指定\n     ex. 'path/to/target/mc'</p>\n<p>Defaults to: <code>&#39;/&#39;</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object|null</span><div class='sub-desc'><p>取得した API\n     API が見つからなかった場合、console.warn を出したのち、null を返します。</p>\n</div></li></ul></div></div></div><div id='method-getMovieClip' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-getMovieClip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-getMovieClip' class='name expandable'>getMovieClip</a>( <span class='pre'>path, [cache]</span> ) : Object|null<span class=\"signature\"></span></div><div class='description'><div class='short'>指定したパスのムービークリップを取得する ...</div><div class='long'><p>指定したパスのムービークリップを取得する</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>path</span> : String<div class='sub-desc'><p>取得するムービークリップへのルートムービークリップからの絶対パス\n     ex. '/path/to/target/mc' のようにスラッシュ区切りで指定</p>\n</div></li><li><span class='pre'>cache</span> : Boolean (optional)<div class='sub-desc'><p>取得したムービークリップをローカルにキャッシュするかどうかのフラグ\n     true の場合、渡されたパスに対して取得したムービークリップをキャッシュするので\n     次回のアクセスが早くなりますが、ムービークリップが差し替わった場合に、新しいムービークリップへアクセスできなくなります</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object|null</span><div class='sub-desc'><p>取得したムービークリップ\n     MC が見つからなかった場合、console.warn を出したのち、null を返します。</p>\n</div></li></ul></div></div></div><div id='method-initViewer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-initViewer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-initViewer' class='name expandable'>initViewer</a>( <span class='pre'>callback</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Canvas のサイズ設定、フルスクリーンの処理を行う ...</div><div class='long'><p>Canvas のサイズ設定、フルスクリーンの処理を行う</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>設定完了時のコールバック</p>\n</div></li></ul></div></div></div><div id='method-load' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-load' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-load' class='name expandable'>load</a>( <span class='pre'>[callback]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>アセットと、ルートムービークリップのロードと初期化を行う\nアセット読み込みがない場合は、即座にルートムービークリップの初期化のみ行う\nアセットは非同期、ムービークリップは同期で走るが、ルートのムービークリップは初期化コストが高いので処...</div><div class='long'><p>アセットと、ルートムービークリップのロードと初期化を行う\nアセット読み込みがない場合は、即座にルートムービークリップの初期化のみ行う\nアセットは非同期、ムービークリップは同期で走るが、ルートのムービークリップは初期化コストが高いので処理の終了後に読み込み完了としている</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>ロード完了時のコールバック。 option.onload よりあとに呼ばれる。</p>\n</div></li></ul></div></div></div><div id='method-loadManifests' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-loadManifests' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-loadManifests' class='name expandable'>loadManifests</a>( <span class='pre'>manifests, callback</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>対象の CreateJS ファイルが持つ prototypes.manifest に記述されたファイル群をロードする ...</div><div class='long'><p>対象の CreateJS ファイルが持つ prototypes.manifest に記述されたファイル群をロードする</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>manifests</span> : Array<div class='sub-desc'><p>CreateJS ファイルの properties.manifest 形式の配列</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>読み込み完了時に発火するコールバック</p>\n</div></li></ul></div></div></div><div id='method-pause' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-pause' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-pause' class='name expandable'>pause</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CreateJS が再生中の場合、CreateJS のポーズ処理を行う ...</div><div class='long'><p>CreateJS が再生中の場合、CreateJS のポーズ処理を行う</p>\n</div></div></div><div id='method-play' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-play' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-play' class='name expandable'>play</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>描画 Canvas への各種描画設定、フルスクリーン処理、CreateJS の再生開始を行う ...</div><div class='long'><p>描画 Canvas への各種描画設定、フルスクリーン処理、CreateJS の再生開始を行う</p>\n</div></div></div><div id='method-resume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-resume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-resume' class='name expandable'>resume</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CreateJS がポーズ中の場合、レジュームの処理を行う ...</div><div class='long'><p>CreateJS がポーズ中の場合、レジュームの処理を行う</p>\n</div></div></div><div id='method-setManifestData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-setManifestData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-setManifestData' class='name expandable'>setManifestData</a>( <span class='pre'>id, src, [type]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>id を元に properties.manifest に存在する manifest のデータを書き換える\nid が存在しない場合は、新たに manifest オブジェクトを生成し、manifest へ追加する ...</div><div class='long'><p>id を元に properties.manifest に存在する manifest のデータを書き換える\nid が存在しない場合は、新たに manifest オブジェクトを生成し、manifest へ追加する</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String|Number<div class='sub-desc'><p>manifest のデータを設定する対象の id</p>\n</div></li><li><span class='pre'>src</span> : String|Number<div class='sub-desc'><p>設定するアセットデータへの URL、もしくは base64 String</p>\n</div></li><li><span class='pre'>type</span> : String (optional)<div class='sub-desc'><p>設定する manifest データのタイプを指定。 src に base64 String を指定した場合は必須\n     指定するのは createjs.LoadQueue 以下の各タイプ</p>\n</div></li></ul></div></div></div><div id='method-stop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-method-stop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-method-stop' class='name expandable'>stop</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CreateJS の停止処理を行う ...</div><div class='long'><p>CreateJS の停止処理を行う</p>\n</div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-extend' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FlCjsPlayer'>FlCjsPlayer</span><br/><a href='source/fl-cjs-player.html#FlCjsPlayer-static-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FlCjsPlayer-static-method-extend' class='name expandable'>extend</a>( <span class='pre'></span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Object, Array の deep extend を行う ...</div><div class='long'><p>Object, Array の deep extend を行う</p>\n</div></div></div></div></div></div></div>","meta":{}});